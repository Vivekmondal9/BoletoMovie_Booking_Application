{"ast":null,"code":"var _jsxFileName = \"/Users/vivekmondal/Desktop/Final_Exam_Coding_Invaders/boletomovie/src/TheaterPage/theaterseats.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router\";\nimport Footer from \"../Navbar/Footer\";\nimport Navbar from \"../Navbar/navbar\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { fetchWithToken } from \"../API/interceptor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TheaterSeats() {\n  _s();\n  const params = useParams();\n  const [movies, setMovies] = useState();\n  const [theaters, setTheater] = useState();\n  const [seats, setSeats] = useState();\n  useEffect(() => {\n    async function fetchSeats() {\n      try {\n        const response = await fetchWithToken(\"http://127.0.0.1:8000/api/movies/single/?id=\" + movie_id);\n        if (response.ok) {\n          const result = await response.json();\n          setMovies(result);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie();\n  }, []);\n  let movie_id = params.movie_id;\n  let theater_id = params.theater_id;\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const response = await fetchWithToken(\"http://127.0.0.1:8000/api/movies/single/?id=\" + movie_id);\n        if (response.ok) {\n          const result = await response.json();\n          setMovies(result);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie();\n  }, []);\n  useEffect(() => {\n    async function fetchTheater() {\n      try {\n        const response = await fetchWithToken(\"http://127.0.0.1:8000/api/theater/?theater=\" + theater_id);\n        if (response.ok) {\n          const result = await response.json();\n          setTheater(result);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchTheater();\n  }, []);\n  console.log(theaters);\n  let theater;\n  if (theaters) {\n    theater = theaters[\"theaters\"];\n  }\n  let movie;\n  if (movies) {\n    movie = movies[\"movies\"];\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          height: \"100vh\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"auto\"\n        },\n        children: [movie && movie.map((p, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movidetails\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\",\n              fontSize: \"1.5em\",\n              textShadow: \"2px 2px 2px black\"\n            },\n            children: [\"Movie: \", p.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 26\n        }, this)), theater && theater.map((p, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theaterdetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\",\n              fontSize: \"1.5em\",\n              textShadow: \"2px 2px 2px black\"\n            },\n            children: [\"Theater: \", p.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\",\n              fontSize: \"1em\",\n              textShadow: \"2px 2px 2px black\"\n            },\n            children: [\"Show Time: \", p.timing]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 26\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screendiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"screen.png\",\n            alt: \"Load Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seatsec\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TheaterSeats, \"VRrWnB5NFstrEnfnoM6POLjy4bI=\", false, function () {\n  return [useParams];\n});\n_c = TheaterSeats;\nexport default TheaterSeats;\nvar _c;\n$RefreshReg$(_c, \"TheaterSeats\");","map":{"version":3,"names":["useParams","Footer","Navbar","useEffect","useState","axios","fetchWithToken","jsxDEV","_jsxDEV","Fragment","_Fragment","TheaterSeats","_s","params","movies","setMovies","theaters","setTheater","seats","setSeats","fetchSeats","response","movie_id","ok","result","json","error","console","log","fetchMovie","theater_id","fetchTheater","theater","movie","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","justifyContent","height","alignItems","width","map","p","i","color","fontSize","textShadow","title","name","timing","src","alt","_c","$RefreshReg$"],"sources":["/Users/vivekmondal/Desktop/Final_Exam_Coding_Invaders/boletomovie/src/TheaterPage/theaterseats.jsx"],"sourcesContent":["import { useParams } from \"react-router\";\nimport Footer from \"../Navbar/Footer\";\nimport Navbar from \"../Navbar/navbar\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { fetchWithToken } from \"../API/interceptor\";\n\n\n\n\n\n\n\nfunction TheaterSeats() {\n\n    const params = useParams()\n    const [movies, setMovies] = useState()\n    const [theaters,setTheater]=useState()\n\n    const [seats,setSeats]=useState();\n    useEffect(() => {\n        async function fetchSeats() {\n            try {\n                const response = await fetchWithToken(\"http://127.0.0.1:8000/api/movies/single/?id=\" + movie_id);\n                if (response.ok) {\n                    const result = await response.json()\n                    setMovies(result)\n                }\n            }\n            catch (error) {\n                console.log(error)\n            }\n\n        }\n        fetchMovie()\n    }, [])\n\n\n\n    let movie_id = params.movie_id;\n    let theater_id = params.theater_id;\n    useEffect(() => {\n        async function fetchMovie() {\n            try {\n                const response = await fetchWithToken(\"http://127.0.0.1:8000/api/movies/single/?id=\" + movie_id);\n                if (response.ok) {\n                    const result = await response.json()\n                    setMovies(result)\n                }\n            }\n            catch (error) {\n                console.log(error)\n            }\n\n        }\n        fetchMovie()\n    }, [])\n    useEffect(() => {\n        async function fetchTheater() {\n            try {\n                const response = await fetchWithToken(\"http://127.0.0.1:8000/api/theater/?theater=\" + theater_id);\n                if (response.ok) {\n                    const result = await response.json()\n                    setTheater(result)\n                }\n            }\n            catch (error) {\n                console.log(error)\n            }\n\n        }\n        fetchTheater()\n    }, [])\n    console.log(theaters)\n\n    let theater ;\n    if (theaters) {\n        theater = theaters[\"theaters\"];\n    }\n\n    let movie ;\n    if (movies) {\n        movie = movies[\"movies\"];\n    }\n\n    return (\n        <>\n            <Navbar></Navbar>\n            <div className=\"container\" style={{justifyContent:\"center\"}}>\n                <div className=\"col-md-6\" style={{ height: \"100vh\" ,alignItems:\"center\",justifyContent:\"center\",width:\"auto\"}}>\n                    {movie && movie.map((p,i)=>(\n                         <div className=\"movidetails\">\n                         <p style={{color:\"white\" ,fontSize:\"1.5em\", textShadow:\"2px 2px 2px black\"}}>Movie: {p.title}</p>\n                     </div>\n                    ))\n                       \n                    }\n                     {theater && theater.map((p,i)=>(\n                         <div className=\"theaterdetails\">\n                         <p style={{color:\"white\" ,fontSize:\"1.5em\", textShadow:\"2px 2px 2px black\"}}>Theater: {p.name}</p>\n                         <p style={{color:\"white\" ,fontSize:\"1em\", textShadow:\"2px 2px 2px black\"}}>Show Time: {p.timing}</p>\n                     </div>\n\n                    ))\n                       \n                    }\n         \n                    <div className=\"screendiv\">\n                        <img src=\"screen.png\" alt=\"Load Image\"/>\n                        <div className=\"seatsec\">\n\n                        </div>\n                    </div>\n                </div>\n                {/* <div className=\"col-md-3\"></div> */}\n            </div>\n            <Footer></Footer>\n        </>\n    )\n\n}\n\n\n\nexport default TheaterSeats;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}