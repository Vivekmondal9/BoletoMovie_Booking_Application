{"ast":null,"code":"// Replace with your actual API base URL\n\nasync function fetchWithToken(url, options = {}) {\n  const token = localStorage.getItem('access_token'); // Get token from local storage\n\n  // If token is available, add it to the request headers\n  if (token) {\n    options.headers = {\n      ...options.headers,\n      Authorization: `Bearer ${token}`\n    };\n  }\n  const response = await fetch(`${url}`, options);\n  // Check if token expired\n  if (response.status === 401) {\n    const refreshToken = localStorage.getItem('refresh_token'); // Get refresh token from local storage\n    if (refreshToken) {\n      // Fetch new access token using refresh token\n      const refreshResponse = await fetch(`http://127.0.0.1:8000/api/refresh/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh_token: refreshToken\n        })\n      });\n      console.log(refreshResponse);\n      if (refreshResponse.ok) {\n        const data = await refreshResponse.json();\n        localStorage.setItem('access_token', data.access_token);\n        return fetchWithToken(url, options);\n      } else {\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n      }\n    }\n  }\n  return response;\n}\nexport { fetchWithToken };","map":{"version":3,"names":["fetchWithToken","url","options","token","localStorage","getItem","headers","Authorization","response","fetch","status","refreshToken","refreshResponse","method","body","JSON","stringify","refresh_token","console","log","ok","data","json","setItem","access_token","removeItem"],"sources":["/Users/vivekmondal/Desktop/Final_Exam_Coding_Invaders/boletomovie/src/API/interceptor.js"],"sourcesContent":["// Replace with your actual API base URL\n\nasync function fetchWithToken(url, options = {}) {\n    const token = localStorage.getItem('access_token'); // Get token from local storage\n\n    // If token is available, add it to the request headers\n    if (token) {\n        options.headers = {\n            ...options.headers,\n            Authorization: `Bearer ${token}`,\n        };\n    }\n\n    const response = await fetch(`${url}`, options);\n    // Check if token expired\n    if (response.status === 401) {\n        const refreshToken = localStorage.getItem('refresh_token'); // Get refresh token from local storage\n        if (refreshToken) {\n            // Fetch new access token using refresh token\n            const refreshResponse = await fetch(`http://127.0.0.1:8000/api/refresh/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ refresh_token: refreshToken }),\n            })\n            \n            console.log(refreshResponse);\n\n            if (refreshResponse.ok) {\n                const data = await refreshResponse.json();\n                localStorage.setItem('access_token', data.access_token);\n                return fetchWithToken(url, options);\n            } else {\n                localStorage.removeItem(\"access_token\");\n                localStorage.removeItem(\"refresh_token\");\n            }\n        }\n    }\n\n    return response;\n}\n\nexport { fetchWithToken };"],"mappings":"AAAA;;AAEA,eAAeA,cAAcA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;;EAEpD;EACA,IAAIF,KAAK,EAAE;IACPD,OAAO,CAACI,OAAO,GAAG;MACd,GAAGJ,OAAO,CAACI,OAAO;MAClBC,aAAa,EAAG,UAASJ,KAAM;IACnC,CAAC;EACL;EAEA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,GAAI,EAAC,EAAEC,OAAO,CAAC;EAC/C;EACA,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACzB,MAAMC,YAAY,GAAGP,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;IAC5D,IAAIM,YAAY,EAAE;MACd;MACA,MAAMC,eAAe,GAAG,MAAMH,KAAK,CAAE,oCAAmC,EAAE;QACtEI,MAAM,EAAE,MAAM;QACdP,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,aAAa,EAAEN;QAAa,CAAC;MACxD,CAAC,CAAC;MAEFO,OAAO,CAACC,GAAG,CAACP,eAAe,CAAC;MAE5B,IAAIA,eAAe,CAACQ,EAAE,EAAE;QACpB,MAAMC,IAAI,GAAG,MAAMT,eAAe,CAACU,IAAI,CAAC,CAAC;QACzClB,YAAY,CAACmB,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,YAAY,CAAC;QACvD,OAAOxB,cAAc,CAACC,GAAG,EAAEC,OAAO,CAAC;MACvC,CAAC,MAAM;QACHE,YAAY,CAACqB,UAAU,CAAC,cAAc,CAAC;QACvCrB,YAAY,CAACqB,UAAU,CAAC,eAAe,CAAC;MAC5C;IACJ;EACJ;EAEA,OAAOjB,QAAQ;AACnB;AAEA,SAASR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}