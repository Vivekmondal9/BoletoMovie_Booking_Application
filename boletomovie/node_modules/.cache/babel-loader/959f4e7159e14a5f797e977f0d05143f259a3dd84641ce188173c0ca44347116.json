{"ast":null,"code":"var _jsxFileName = \"/Users/vivekmondal/Desktop/Final_Exam_Coding_Invaders/boletomovie/src/BookingPage/userbookings.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router\";\nimport Footer from \"../Navbar/Footer\";\nimport Navbar from \"../Navbar/navbar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchWithToken } from \"../API/interceptor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserBookings() {\n  _s();\n  const params = useParams();\n  const [userBookings, setUserBookings] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [theaters, setTheaters] = useState([]);\n  useEffect(() => {\n    async function fetchUserBookings() {\n      try {\n        const response = await fetchWithToken(\"http://127.0.0.1:8000/api/user/bookings/\", {\n          headers: {\n            'Authorization': `Bearer ${access_token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUserBookings(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    async function fetchAllMovies() {\n      try {\n        const response = await fetchWithToken(\"http://127.0.0.1:8000/api/movies/\");\n        if (response.ok) {\n          const data = await response.json();\n          // console.log(\"Fetched movies data:\", data);\n          setMovies(data.movies);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    async function fetchAllTheaters() {\n      try {\n        const response = await fetchWithToken(\"http://127.0.0.1:8000/api/theaters/\");\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Fetched movies data:\", data);\n          setTheaters(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchUserBookings();\n    fetchAllMovies();\n    fetchAllTheaters();\n  }, []);\n  const getMovieName = movieId => {\n    const foundMovie = movies.find(movie => movie.movie_id === movieId);\n    return foundMovie ? foundMovie.title : \"Unknown Movie\";\n  };\n  const getTheaterName = theaterId => {\n    const foundTheater = theaters.find(theater => theater.theater_id === theaterId);\n    return foundTheater ? foundTheater.name : \"Unknown Theater\";\n  };\n  const getTheaterTiming = theaterId => {\n    const foundTheater = theaters.find(theater => theater.theater_id === theaterId);\n    return foundTheater ? foundTheater.timing : \"Unknown Theater\";\n  };\n  console.log(userBookings);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        textShadow: \"2px 2px 3px black\",\n        gap: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), userBookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          boxShadow: \"2px 2px 5px black\",\n          width: \"auto\",\n          height: \"auto\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          padding: \"2em\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Movie:\", getMovieName(booking.movie), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 65\n          }, this), \"Theater: \", getTheaterName(booking.theater), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 71\n          }, this), \"Timing:\", getTheaterTiming(booking.theater), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 71\n          }, this), \"Seats :\", booking.seat_numbers]\n        }, booking.booking_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UserBookings, \"84/jtT2c587Ig3clYvHpyEHLr0g=\", false, function () {\n  return [useParams];\n});\n_c = UserBookings;\nexport default UserBookings;\nvar _c;\n$RefreshReg$(_c, \"UserBookings\");","map":{"version":3,"names":["useParams","Footer","Navbar","useEffect","useState","fetchWithToken","jsxDEV","_jsxDEV","Fragment","_Fragment","UserBookings","_s","params","userBookings","setUserBookings","movies","setMovies","theaters","setTheaters","fetchUserBookings","response","headers","access_token","ok","data","json","error","console","log","fetchAllMovies","fetchAllTheaters","getMovieName","movieId","foundMovie","find","movie","movie_id","title","getTheaterName","theaterId","foundTheater","theater","theater_id","name","getTheaterTiming","timing","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","justifyContent","alignItems","color","textShadow","gap","map","booking","display","boxShadow","width","height","padding","seat_numbers","booking_id","_c","$RefreshReg$"],"sources":["/Users/vivekmondal/Desktop/Final_Exam_Coding_Invaders/boletomovie/src/BookingPage/userbookings.jsx"],"sourcesContent":["import { useParams } from \"react-router\";\nimport Footer from \"../Navbar/Footer\";\nimport Navbar from \"../Navbar/navbar\";\nimport { useEffect, useState } from \"react\";\nimport { fetchWithToken } from \"../API/interceptor\";\n\n\n\n\n\nfunction UserBookings() {\n\n\n    const params = useParams()\n\n\n    const [userBookings, setUserBookings] = useState([]);\n    const [movies, setMovies] = useState([])\n    const [theaters, setTheaters] = useState([])\n\n    useEffect(() => {\n        async function fetchUserBookings() {\n            try {\n                const response = await fetchWithToken(\"http://127.0.0.1:8000/api/user/bookings/\",\n                {\n                    headers: {\n                        'Authorization': `Bearer ${access_token}`\n                    }\n                }\n                \n                );\n                if (response.ok) {\n                    const data = await response.json();\n                    setUserBookings(data);\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        async function fetchAllMovies() {\n            try {\n                const response = await fetchWithToken(\"http://127.0.0.1:8000/api/movies/\");\n                if (response.ok) {\n                    const data = await response.json();\n                    // console.log(\"Fetched movies data:\", data);\n                    setMovies(data.movies); \n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        async function fetchAllTheaters() {\n            try {\n                const response = await fetchWithToken(\"http://127.0.0.1:8000/api/theaters/\");\n                if (response.ok) {\n                    const data = await response.json();\n                    console.log(\"Fetched movies data:\", data);\n                    setTheaters(data); \n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        fetchUserBookings();\n        fetchAllMovies();\n        fetchAllTheaters();\n    }, []);\n\n\n\n  \n    const getMovieName = (movieId) => {\n        const foundMovie = movies.find((movie) => movie.movie_id === movieId);\n        return foundMovie ? foundMovie.title : \"Unknown Movie\";\n    };\n    const getTheaterName = (theaterId) => {\n        const foundTheater = theaters.find((theater) => theater.theater_id === theaterId);\n        return foundTheater ? foundTheater.name : \"Unknown Theater\";\n    };\n\n    const getTheaterTiming = (theaterId) => {\n        const foundTheater = theaters.find((theater) => theater.theater_id === theaterId);\n        return foundTheater ? foundTheater.timing : \"Unknown Theater\";\n    };\n\n\n\n    console.log(userBookings)\n    return (\n        <>\n            <Navbar></Navbar>\n            <div className=\"container\" style={{ justifyContent: \"center\", alignItems: \"center\", color: \"white\", textShadow: \"2px 2px 3px black\", gap: \"20px\" }}>\n\n                <h2>My Bookings</h2>\n                <hr />\n                {userBookings.map((booking) => (\n                    <div style={{ display: \"flex\", boxShadow: \"2px 2px 5px black\", width: \"auto\", height: \"auto\", alignItems: \"center\", justifyContent: \"center\" ,padding:\"2em\"}}>\n                        <h2 key={booking.booking_id}>\n                            Movie:{getMovieName(booking.movie)} <br />\n                            Theater: {getTheaterName(booking.theater)}<br />\n                            Timing:{getTheaterTiming(booking.theater)}<br></br>\n                            Seats :{booking.seat_numbers}\n                            {/* Add more details as needed */}\n                        </h2>\n                    </div>\n                ))}\n\n\n            </div>\n            <Footer></Footer>\n        </>\n    )\n}\n\n\nexport default UserBookings;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}