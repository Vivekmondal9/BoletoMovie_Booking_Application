{"ast":null,"code":"import _slicedToArray from\"/Users/vivekmondal/Documents/VivekMondal_Documents/CI_Final_Exam/Final_Exam_Coding_Invaders/boletomovie/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Formik,Field,Form,ErrorMessage,useFormik}from\"formik\";import*as Yup from\"yup\";import{Link,useNavigate}from\"react-router-dom\";import{useState}from\"react\";import axios from\"axios\";import Navbar from\"../Navbar/navbar\";import\"../Register/login.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ForgetPassword(){var navigate=useNavigate();var initialvalues={username:\"\",password:\"\"};var _useState=useState({responseText:\"\",responseClass:\"\"}),_useState2=_slicedToArray(_useState,2),responseData=_useState2[0],setResponseData=_useState2[1];var validationschema=Yup.object({password:Yup.string().required(\"Password is required\").min(6,\"Password must contain 6 Minimum charecters\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"),phone:Yup.number(\"Enter a valid Mobile Number!\").required(\"Number is Required!!\"),confirmPassword:Yup.string().required().oneOf([Yup.ref('password'),null],'Passwords must match')});function onSubmit(values,_ref){var resetForm=_ref.resetForm;axios.put(\"http://127.0.0.1:8000/api/users/resetpassword/?username=\"+values.username.toString(),values).then(function(response){// This block is executed when the PUT request is successful (status code 2xx).\n// Set the response data state with a success message and CSS class for styling.\nsetResponseData({responseText:\"Successfully Changed\",responseClass:\"alert alert-success\"});// Navigate to the login page after a 1-second delay (1000 milliseconds).\nsetTimeout(function(){navigate(\"/login\");},1000);}).catch(function(error){// This block is executed when the PUT request encounters an error (non-2xx status code) or other errors occur.\n// Check if the error response contains an error message.\nif(error.response&&error.response.data&&error.response.data.message){// If the error response contains a specific message from the server, use that as the responseText.\nsetResponseData({responseText:error.response.data.message,responseClass:\"alert alert-danger\"});}else{// If the error response does not have a specific message, use a generic error message.\nsetResponseData({responseText:\"An error occurred. Please try again later.\",responseClass:\"alert alert-danger\"});}// Note: The `catch` block will also handle errors that occur during the execution of the request (e.g., network errors).\n// If you want to log these errors, you can add a `console.log(error)` statement here.\n});resetForm();}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mainform\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"logg\",children:\"Reset Password\"}),/*#__PURE__*/_jsx(\"div\",{className:responseData.responseClass,role:\"alert\",children:responseData.responseText}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Formik,{initialValues:initialvalues,validationSchema:validationschema,validateOnMount:true,onSubmit:onSubmit,children:function children(formik){return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username\"}),/*#__PURE__*/_jsx(Field,{type:\"username\",name:\"username\",className:\"form-control\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Phone\"}),/*#__PURE__*/_jsx(Field,{type:\"mobile\",name:\"phone\",className:\"form-control\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"New Password\"}),/*#__PURE__*/_jsx(Field,{name:\"password\",type:\"password\",className:\"form-control\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",children:function children(errormessage){return/*#__PURE__*/_jsx(\"small\",{className:\"text-danger\",children:errormessage});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"confirmPassword\",className:formik.errors.confirmPassword&&formik.touched.confirmPassword?\"form-control is-invalid\":\"form-control\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"confirmPassword\",children:function children(errormessage){return/*#__PURE__*/_jsx(\"small\",{className:\"text-danger\",children:errormessage});}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",class:\"btn btn-primary\",value:\"resetpassword\",disabled:!formik.isValid,children:\"Submit\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/login\",class:\"btn btn-primary\",children:\"Cancel\"})]});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\"})]})})]});}export default ForgetPassword;","map":{"version":3,"names":["Formik","Field","Form","ErrorMessage","useFormik","Yup","Link","useNavigate","useState","axios","Navbar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ForgetPassword","navigate","initialvalues","username","password","_useState","responseText","responseClass","_useState2","_slicedToArray","responseData","setResponseData","validationschema","object","string","required","min","matches","phone","number","confirmPassword","oneOf","ref","onSubmit","values","_ref","resetForm","put","toString","then","response","setTimeout","catch","error","data","message","children","className","role","initialValues","validationSchema","validateOnMount","formik","htmlFor","type","name","errormessage","errors","touched","class","value","disabled","isValid","href"],"sources":["/Users/vivekmondal/Documents/VivekMondal_Documents/CI_Final_Exam/Final_Exam_Coding_Invaders/boletomovie/src/Register/Forgerpassword.jsx"],"sourcesContent":["\nimport { Formik, Field, Form, ErrorMessage, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../Navbar/navbar\";\nimport \"../Register/login.css\"\nfunction ForgetPassword() {\n    const navigate=useNavigate()\n    const initialvalues = {\n        username: \"\",\n        password: \"\"\n    }\n    const [responseData,setResponseData]=useState({\n        responseText:\"\",\n        responseClass:\"\"\n    })\n\n\n    const validationschema = Yup.object({\n        password: Yup.string().required(\"Password is required\").min(6, \"Password must contain 6 Minimum charecters\").matches(\n\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n        ),\n        phone: Yup.number(\"Enter a valid Mobile Number!\").required(\"Number is Required!!\"),\n        \n        confirmPassword: Yup.string().required().oneOf([Yup.ref('password'), null], 'Passwords must match')\n    })\n\n\n    function onSubmit(values,{resetForm}){\n        axios.put(\"http://127.0.0.1:8000/api/users/resetpassword/?username=\" + values.username.toString(), values)\n        .then((response) => {\n          // This block is executed when the PUT request is successful (status code 2xx).\n      \n          // Set the response data state with a success message and CSS class for styling.\n          setResponseData({\n            responseText: \"Successfully Changed\",\n            responseClass: \"alert alert-success\"\n          });\n      \n          // Navigate to the login page after a 1-second delay (1000 milliseconds).\n          setTimeout(() => {\n            navigate(\"/login\");\n          }, 1000);\n        })\n        .catch((error) => {\n          // This block is executed when the PUT request encounters an error (non-2xx status code) or other errors occur.\n      \n          // Check if the error response contains an error message.\n          if (error.response && error.response.data && error.response.data.message) {\n            // If the error response contains a specific message from the server, use that as the responseText.\n            setResponseData({\n              responseText: error.response.data.message,\n              responseClass: \"alert alert-danger\"\n            });\n          } else {\n            // If the error response does not have a specific message, use a generic error message.\n            setResponseData({\n              responseText: \"An error occurred. Please try again later.\",\n              responseClass: \"alert alert-danger\"\n            });\n          }\n      \n          // Note: The `catch` block will also handle errors that occur during the execution of the request (e.g., network errors).\n          // If you want to log these errors, you can add a `console.log(error)` statement here.\n        });\n        resetForm();\n\n    }\n    return (\n\n        <>\n        <Navbar></Navbar>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <div className=\"mainform\">\n                        <h1 className=\"logg\">Reset Password</h1>\n                        <div className={responseData.responseClass} role=\"alert\">{responseData.responseText}</div>\n                        <hr />\n                        <Formik initialValues={initialvalues} validationSchema={validationschema} validateOnMount onSubmit={onSubmit}>\n                            {(formik) => {\n                                return (\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"username\">Username</label>\n                                            <Field type=\"username\" name=\"username\" className=\"form-control\" />\n                                            {/* <ErrorMessage name=\"username\">\n                                                {(errormessage) => (<small className=\"text-danger\">{errormessage}</small>)}\n                                            </ErrorMessage> */}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Phone</label>\n                                            <Field type=\"mobile\" name=\"phone\" className=\"form-control\"/>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\">New Password</label>\n                                            <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                                            <ErrorMessage name=\"password\">{(errormessage) => (<small className=\"text-danger\">{errormessage}</small>)}</ErrorMessage>\n                                        </div>\n                                        <div className=\"form-group\">\n                                                <label htmlFor=\"\">Confirm Password</label>\n                                                <Field type=\"password\" name=\"confirmPassword\" className={formik.errors.confirmPassword &&\n                                                    formik.touched.confirmPassword ? \"form-control is-invalid\" : \"form-control\"} />\n                                                <ErrorMessage name=\"confirmPassword\">\n                                                    {(errormessage) => (<small className=\"text-danger\">{errormessage}</small>)}\n                                                </ErrorMessage>\n                                            </div>\n                                            <button type=\"submit\" class=\"btn btn-primary\" value=\"resetpassword\" disabled={!formik.isValid}>Submit</button>\n\n                                        <a href=\"/login\" class=\"btn btn-primary\">Cancel</a>\n                                    </Form>\n                                )\n                            }}\n\n                        </Formik>\n\n\n                    </div>\n                </div>\n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n        </>\n\n\n\n\n\n\n\n\n    )\n\n}\n\n\nexport default ForgetPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}